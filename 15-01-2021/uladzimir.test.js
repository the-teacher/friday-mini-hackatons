const { test, expect } = require('../test-utils')
const solution = require('./uladzimir')

test('no water', () => {
  let map = [
    [1,1],
    [1,1]
  ]

  expect(solution(map)).toBe(1)
})

test('no island', () => {
  let map = [
    [0,0],
    [0,0]
  ]

  expect(solution(map)).toBe(0)
})

test('default', () => {
  let map = [
    [0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0],
    [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],
    [0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,1],
    [0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0],
    [0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0],
    [0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0],
    [0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
    [0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0],
    [0,0,0,0,0,1,1,0,1,1,1,0,0,0,0,0],
  ]

  expect(solution(map)).toBe(11)
})

test('with last 1', () => {
  let map = [
    [0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0],
    [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],
    [0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,1],
    [0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0],
    [0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0],
    [0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0],
    [0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
    [0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0],
    [0,0,0,0,0,1,1,0,1,1,1,0,0,0,0,1],
  ]

  expect(solution(map)).toBe(12)
})

test('failed 1', () => {
  let map = [
    [1,1,1],
    [0,1,0],
    [1,1,1]
  ]

  expect(solution(map)).toBe(1)
})
